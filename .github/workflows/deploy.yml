name: Deploy Angular App to IIS

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Install Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 19  # Use a compatible Node.js version

    # Install dependencies
    - name: Install Dependencies
      run: npm install

    # Build the Angular app
    - name: Build Angular App
      run: npm run build -- --configuration=production
      working-directory: ${{ github.workspace }}/deployment_test

    # Deploy to IIS using Web Deploy (no credentials needed)
    - name: Deploy to IIS
      env:
        IIS_SERVER: ${{ secrets.IIS_SERVER }}
        IIS_SITE_NAME: ${{ secrets.IIS_SITE_NAME }}
      run: |
        # Define paths for msdeploy and dist folder
        $msdeployPath = "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe"  # Ensure correct path with quotes
        $distPath = "${{ github.workspace }}\dist\deployment_test\browser"  # Ensure this path matches your build output folder

        # Check if msdeploy.exe exists at the specified path
        if (-Not (Test-Path $msdeployPath)) {
          Write-Host "msdeploy.exe not found. Please verify the installation path."
          exit 1
        }

        # Check if dist folder exists
        if (-Not (Test-Path $distPath)) {
          Write-Host "The build folder '$distPath' was not found. Ensure the build was successful."
          exit 1
        }

        # Deploy the build to IIS using msdeploy
        Write-Host "Deploying to IIS server..."
        # Ensure the path is correctly quoted if there are spaces
        $msdeployCommand = "`"$msdeployPath`" -verb:sync -source:contentPath=`"$distPath`" -dest:contentPath=`"$env:IIS_SITE_NAME`",computerName=`"https://$env:IIS_SERVER:8172/msdeploy.axd`" -delete -enableRule:DoNotDeleteRule"
        
        # Run the msdeploy command
        Invoke-Expression $msdeployCommand
